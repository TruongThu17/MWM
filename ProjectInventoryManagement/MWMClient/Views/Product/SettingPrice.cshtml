@model IEnumerable<BusinessObject.DTO.ProductDTO>;
@{
    var pagingmodel = new MWMClient.Helper.PagingModel()
            {
                currentpage = ViewBag.currentPage,
                countpages = ViewBag.countPages,
                generateUrl = (int? c) => Url.Action("SettingPrice", "Product", new { c = c })
            };

}
<style>
        #notification {
        position: fixed;
        bottom: 20px;
        right: 10px;
        background-color: lightgreen;
        color: white;
        padding: 15px;
        z-index: 9999;
    }
</style>
<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <div>
                    <i class="fa fa-align-justify"></i> Thiết Lập Giá
                </div>
                <div class="row">
                    <form method="get">
                        <div class="row">
                            <input style="width: 200px;" type="text" class="form-control" name="searchString" placeholder="Nhập tên đối tác...">
                            <button type="submit" class="btn btn-primary mx-3">Tìm kiếm</button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="card-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.Id)</th>
                            <th>@Html.DisplayNameFor(model => model.Name)</th>
                            <th>@Html.DisplayNameFor(model => model.Producer)</th>
                            <th>@Html.DisplayNameFor(model => model.ProductTypeNavigation.Name)</th>
                            <th>@Html.DisplayNameFor(model => model.SalePrice)</th>
                            <th>@Html.DisplayNameFor(model => model.Status)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(itemm => item.Id)</td>
                                <td>@Html.DisplayFor(itemm => item.Name)</td>
                                <td>@Html.DisplayFor(itemm => item.Producer)</td>
                                <td>@Html.DisplayFor(itemm => item.ProductTypeNavigation.Name)</td>
                                <td>
                                    <input class="form-control" id='priceP-@item.Id' type="number" value="@item.SalePrice">
                                </td>
                                <td>
                                    @if (@item.Status == true)
                                    {
                                        <p>Đang bán</p>
                                    }
                                    else
                                    {
                                        <p>Ngưng bán</p>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div id="notification" style="display:none;">Thông báo sẽ được hiển thị ở đây</div>
                <partial name="_Page" model="@pagingmodel" />
            </div>
        </div>
    </div>
    <!-- /.col-->
</div>
<script>
    $(document).on('input', 'input[id^="priceP-"]', function () {
        var inputSuffix = $(this).attr('id').split('-')[1];
        var newPrice = $(this).val();
        var productDTO = {
            salePrice: parseFloat(newPrice)
        };
        $.ajax({
            url: "http://localhost:5000/api/product/" + inputSuffix,
            type: "PUT",
            contentType: "application/json",
            data: JSON.stringify(productDTO),
            success: function (result, status, xhr) {
                showNotification("Sửa Giá Thành Công!", 5000);
            },
            error: function () {
                alert('Đã có lỗi xảy ra, vui lòng thử lại sau');
            }
        });
        $("#priceP-" + inputSuffix).val() = newPrice;
    });
    function showNotification(message, duration) {
        var notification = document.getElementById("notification");
        notification.innerHTML = message;
        notification.style.display = "block";
        setTimeout(function () {
            notification.style.display = "none";
        }, duration);
    }
</script>
